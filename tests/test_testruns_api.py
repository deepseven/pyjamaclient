"""
    Jama REST API

    This is the documentation for the Jama REST API.  # noqa: E501

    The version of the OpenAPI document: latest
    Generated by: https://openapi-generator.tech
"""


import unittest

import pyjama
from pyjama.api.testruns_api import TestrunsApi  # noqa: E501


class TestTestrunsApi(unittest.TestCase):
    """TestrunsApi unit test stubs"""

    def setUp(self):
        self.api = TestrunsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_test_run_attachment(self):
        """Test case for add_test_run_attachment

        Add an existing attachment to the item with the specified ID  # noqa: E501
        """
        pass

    def test_add_test_run_link(self):
        """Test case for add_test_run_link

        Create a new link for the item with the specified ID  # noqa: E501
        """
        pass

    def test_add_test_run_tag(self):
        """Test case for add_test_run_tag

        Add an existing tag to the item with the specified ID  # noqa: E501
        """
        pass

    def test_delete_test_run(self):
        """Test case for delete_test_run

        Delete the test run with the specified ID  # noqa: E501
        """
        pass

    def test_delete_test_run_link(self):
        """Test case for delete_test_run_link

        Delete the link with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run(self):
        """Test case for get_test_run

        Get the test run with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_activities(self):
        """Test case for get_test_run_activities

        Get all activities for the test run with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_attachments(self):
        """Test case for get_test_run_attachments

        Get all attachments for the item with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_comments(self):
        """Test case for get_test_run_comments

        Get all comments for the item with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_downstream_related(self):
        """Test case for get_test_run_downstream_related

        Get all downstream related items for the test run with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_downstream_relationships(self):
        """Test case for get_test_run_downstream_relationships

        Get all downstream relationships for the test run with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_link(self):
        """Test case for get_test_run_link

        Get the link with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_links(self):
        """Test case for get_test_run_links

        Get all links for the item with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_lock(self):
        """Test case for get_test_run_lock

        Get the locked state, last locked date, and last locked by user for the item with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_tag(self):
        """Test case for get_test_run_tag

        Get the tag with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_tags(self):
        """Test case for get_test_run_tags

        Get all tags for the item with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_upstream_related(self):
        """Test case for get_test_run_upstream_related

        Get all upstream related items for the test run with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_upstream_relationships(self):
        """Test case for get_test_run_upstream_relationships

        Get all upstream relationships for the test run with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_version(self):
        """Test case for get_test_run_version

        Get the  snapshot of the test run at the specified version  # noqa: E501
        """
        pass

    def test_get_test_run_versioned(self):
        """Test case for get_test_run_versioned

        Get the numbered version for the item with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_run_versions(self):
        """Test case for get_test_run_versions

        Get all versions for the item with the specified ID  # noqa: E501
        """
        pass

    def test_get_test_runs(self):
        """Test case for get_test_runs

        Search for test runs associated with test cases, test plans, an test cycles  # noqa: E501
        """
        pass

    def test_make_test_run_current(self):
        """Test case for make_test_run_current

        Delete the current test run and then create a new test run based on the latest test case version.  # noqa: E501
        """
        pass

    def test_patch_test_run(self):
        """Test case for patch_test_run

        Update the execution results for the test run with the specified ID  # noqa: E501
        """
        pass

    def test_remove_attachment_from_test_run(self):
        """Test case for remove_attachment_from_test_run

        Remove an existing attachment from the item  # noqa: E501
        """
        pass

    def test_remove_test_runs_tag_from_item(self):
        """Test case for remove_test_runs_tag_from_item

        Remove an existing tag from the item with the specified ID  # noqa: E501
        """
        pass

    def test_update_test_run(self):
        """Test case for update_test_run

        Update the execution results for the test run with the specified ID  # noqa: E501
        """
        pass

    def test_update_test_run_link(self):
        """Test case for update_test_run_link

        Update the link with the specified ID  # noqa: E501
        """
        pass

    def test_update_test_run_lock(self):
        """Test case for update_test_run_lock

        Update the locked state of the item with the specified ID  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
